---
import { LOGO_IMAGE, SITE } from "@config";
import { slugifyStr } from "@utils/slugify";

export interface Props {
  activeNav?: string;
}

const { activeNav } = Astro.props;
---

<header>
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <a href="/" class="logo mt-0.5 font-medium text-skin-base sm:mt-0">
        {
          LOGO_IMAGE.enable ? (
            <img
              src={`/assets/${LOGO_IMAGE.svg ? "logo.svg" : "logo.png"}`}
              alt={SITE.title}
              width={LOGO_IMAGE.width}
              height={LOGO_IMAGE.height}
            />
          ) : (
            SITE.title
          )
        }
      </a>
      <nav id="nav-menu">
        <button
          class="hamburger-menu focus-outline material-symbols-outlined"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          top_panel_open
        </button>
        <div id="menu-items-wrapper">
          <ul id="menu-items" class="overflow-hidden">
            <li>
              <a href="/" class={!activeNav && "active"}> Home </a>
            </li>
            {
              ["Info", "Schedule", "Featured speakers", "Contact"].map(link => (
                <li>
                  <a
                    href={slugifyStr(link)}
                    class={activeNav === slugifyStr(link) ? "active" : ""}
                  >
                    {link}
                  </a>
                </li>
              ))
            }
            {
              SITE.lightAndDarkMode && (
                <li>
                  <button
                    id="theme-btn"
                    class="focus-outline"
                    title="Toggles light & dark"
                    aria-label="auto"
                    aria-live="polite"
                  >
                    <span class="material-symbols-outlined" id="moon-svg">
                      tonality
                    </span>
                    <span class="material-symbols-outlined" id="sun-svg">
                      tonality
                    </span>
                  </button>
                </li>
              )
            }
          </ul>
        </div>
      </nav>
    </div>
  </div>
</header>

<style>
  #skip-to-content {
    @apply absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4;
  }
  .nav-container {
    @apply md:flex-row mx-0 flex flex-col items-center justify-between;
  }
  .top-nav-wrap {
    @apply md:p-12 relative mb-2 w-full flex-col items-start justify-between p-4;
  }
  .logo {
    @apply md:static md:mb-8 absolute block py-1 text-lg;
  }
  .hamburger-menu {
    @apply md:hidden self-end py-2 transition-transform;
  }
  .hamburger-menu.open {
    /* @apply rotate-180; */
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }

  nav {
    @apply md:justify-start md:space-x-4 md:py-0 flex w-full flex-col items-start;
  }
  nav ul {
    @apply md:ml-0 md:mt-0 md:w-auto md:gap-x-5 md:gap-y-0 mt-4 grid w-44 grid-cols-2 grid-rows-4 gap-x-2 gap-y-2;
  }
  nav ul li {
    @apply md:items-start md:justify-start md:py-1 col-span-2 flex items-end justify-start overflow-hidden;
  }
  nav ul li a {
    @apply md:my-0 md:py-1 md:text-left w-full px-0 py-1 text-left font-normal text-skin-base/80 hover:text-skin-accent sm:text-sm;
  }
  nav ul li:nth-last-child(2) a {
    @apply w-auto;
  }
  nav a.active {
    @apply decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  nav button {
    @apply p-1;
  }
  nav button svg {
    @apply h-4 w-4 fill-skin-base hover:fill-skin-accent;
  }
  #theme-btn {
    @apply md:p-1 md:fixed md:bottom-0 md:left-0 md:m-10 p-0 pt-2 text-skin-base/80;
  }
  #theme-btn svg {
    @apply md:scale-100 scale-125 text-sm hover:rotate-12;
  }

  .menu-icon line {
    @apply opacity-10 transition-opacity duration-75 ease-in-out;
  }
  .menu-icon .close {
    opacity: 0;
  }
  .menu-icon.is-active .line {
    @apply opacity-0;
  }
  .menu-icon.is-active .close {
    @apply opacity-5;
  }
  #menu-items-wrapper {
    @apply md:mb-0 md:grid-rows-[1fr] md:justify-start mx-0 -mb-10 grid w-full grid-rows-[0fr] justify-stretch opacity-0 transition-["grid-template-rows,opacity"] duration-500 ease-out sm:opacity-100;
  }
  #menu-items-wrapper.open {
    @apply after:md:border-0 md:after:content-none mb-0 grid-rows-[1fr] opacity-100 after:mt-8 after:border-b after:border-current after:opacity-20 after:content-[''];
  }
  #menu-items {
    @apply md:w-fit w-full;
  }
</style>

<script>
  function toggleNav() {
    // Toggle menu
    const menuBtn = document.querySelector(".hamburger-menu");
    const menuIcon = document.querySelector(".menu-icon");
    const menuItemsWrapper = document.querySelector("#menu-items-wrapper");

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuIcon?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );
      menuBtn.classList.toggle("open");
      menuBtn.innerHTML = menuExpanded ? "top_panel_open" : "top_panel_close";
      menuItemsWrapper?.classList.toggle("open");
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);
</script>
